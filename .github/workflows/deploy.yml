name: Deploy to AWS

on:
  push:
    branches:
      - main

jobs:
  build-test-ui:
    name: Build/Test UI
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '21.6.1'
        cache-dependency-path: './ui/yarn.lock'

    - name: Install Dependencies
      run: yarn install
      working-directory: ui

    - name: Lint
      run: yarn lint
      working-directory: ui

    - name: Build
      run: yarn build
      working-directory: ui
  
  build-test-server:
    name: Build/Test Server
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.21'
        cache-dependency-path: 'server/go.sum'

    - name: Test
      working-directory: server
      run: go test ./...

    - name: Build
      working-directory: server
      run: go build -v .

  build-and-push:
    name: Build/Push UI
    needs: 
      - build-test-ui
    
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '21.6.1'
        cache-dependency-path: './ui/yarn.lock'
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build, tag, and push UI image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        UI_ECR_REPOSITORY: keep_ui_staging
        IMAGE_TAG: latest
      run: |
        docker build -t $ECR_REGISTRY/$UI_ECR_REPOSITORY:$IMAGE_TAG ./ui
        docker push $ECR_REGISTRY/$UI_ECR_REPOSITORY:$IMAGE_TAG

  build-and-push-server:
    name: Build/Push Server
    needs: 
      - build-test-server
    
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.21'
        cache-dependency-path: 'server/go.sum'

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build, tag, and push server image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        SERVER_ECR_REPOSITORY: keep_server_staging
        IMAGE_TAG: latest
      run: |
        docker build -t $ECR_REGISTRY/$SERVER_ECR_REPOSITORY:$IMAGE_TAG ./server
        docker push $ECR_REGISTRY/$SERVER_ECR_REPOSITORY:$IMAGE_TAG