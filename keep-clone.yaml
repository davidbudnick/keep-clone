openapi: 3.0.3
info:
  title: Keep Clone
  description: "Rest endpoints"
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11
servers:
  - url: http://localhost:3300/v1
tags:
  - name: list
    description: Everything about your Lists
paths:
  /notes/list:
    get:
      tags:
        - list
      summary: Get a list of active notes
      security:
        - UserIDAuth: []
      description: List notes by UserID
      operationId: getNotesList
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Note"
        "400":
          description: Bad request
        "404":
          description: Note not found
  /notes/list/archived:
    get:
      tags:
        - list
      summary: Get a list of archived notes
      security:
        - UserIDAuth: []
      description: List notes by UserID
      operationId: getNotesListArchived
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Note"
        "400":
          description: Bad request
        "404":
          description: Note not found
  /notes/list/deleted:
    get:
      tags:
        - list
      summary: Get a list of deleted notes
      security:
        - UserIDAuth: []
      description: List notes by UserID
      operationId: getNotesListDeleted
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Note"
        "400":
          description: Bad request
        "404":
          description: Note not found
  /notes/get/{noteID}:
    get:
      tags:
        - list
      summary: Retrieve a specific note
      security:
        - UserIDAuth: []
      description: Retrieve the details of a specific note by its noteID
      operationId: getNoteByID
      parameters:
        - name: noteID
          in: path
          description: The ID of the note to retrieve.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful retrieval of the note
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Note"
        "400":
          description: Bad request
        "404":
          description: Note not found
  /notes/create:
    post:
      tags:
        - list
      summary: Create a new note
      security:
        - UserIDAuth: []
      description: Create a new note for a given userID.
      operationId: createNote
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NoteRequest"
      responses:
        "200":
          description: Note successfully created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Note"
        "400":
          description: Bad request
        "500":
          description: Server error
  /notes/update/{noteID}:
    post:
      tags:
        - list
      summary: Update an existing note
      security:
        - UserIDAuth: []
      description: Update the details of an existing note by its noteID
      operationId: updateNote
      parameters:
        - name: userID
          in: header
          description: The ID of the user.
          required: true
          schema:
            type: string
        - name: noteID
          in: path
          description: The ID of the note to update.
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NoteRequest"
      responses:
        "200":
          description: Note successfully updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Note"
        "400":
          description: Bad request
        "500":
          description: Server error
components:
  schemas:
    Note:
      type: object
      properties:
        id:
          type: string
          example: "64b47df83c92e922bbc11e33"
        user_id:
          type: string
          example: "54b47df5dc95d922bbc11e33"
        title:
          type: string
          example: "List of top programming languages"
        body:
          type: string
          example: "Golang,Typescript,SQL"
        status:
          type: string
          enum:
            - ARCHIVED
            - DELETED
            - ACTIVE
        created_at:
          type: string
          format: date-time
          example: "2023-07-16T23:32:08.955Z"
        updated_at:
          type: string
          format: date-time
          example: "2023-07-16T23:32:08.955Z"
    NoteRequest:
      type: object
      properties:
        title:
          type: string
          description: Title of the note
          example: "List of top programming languages"
        body:
          type: string
          description: Body content of the note
          example: "Golang,Typescript,SQL"
        status:
          type: string
          description: Status of the note
          enum:
            - ARCHIVED
            - DELETED
            - ACTIVE
  securitySchemes:
    UserIDAuth:
      type: apiKey
      in: header
      name: X-User-Id
